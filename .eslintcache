[{"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\index.tsx":"1","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\accountAuthStore.ts":"2","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\user\\userService.ts":"3","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\record\\recordService.ts":"4","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\appconst.ts":"5","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\ProtectedRoute.tsx":"6","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\AppLayout.tsx":"7","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Logout\\index.tsx":"8","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Employee\\index.tsx":"9","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Exception\\index.tsx":"10","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Loading\\index.tsx":"11","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\dtr.tsx":"12","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\RecordDtrTable\\index.tsx":"13","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Login\\index.tsx":"14","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\utils.ts":"15","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\userStore.ts":"16","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\dto\\currentUserLogin.ts":"17","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\router.config.ts":"18","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\index.tsx":"19","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeIdentifier.ts":"20","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Footer\\index.tsx":"21","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\NotFoundRoute.tsx":"22","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\accountAuthService.ts":"23","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\UserLayout.tsx":"24","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\index.tsx":"25","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\components\\updateFields.tsx":"26","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Performance\\index.tsx":"27","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\SiderMenu\\index.tsx":"28"},{"size":444,"mtime":1613618888296,"results":"29","hashOfConfig":"30"},{"size":865,"mtime":1613703099732,"results":"31","hashOfConfig":"30"},{"size":1243,"mtime":1613451926109,"results":"32","hashOfConfig":"30"},{"size":904,"mtime":1613452671407,"results":"33","hashOfConfig":"30"},{"size":249,"mtime":1612333606641,"results":"34","hashOfConfig":"30"},{"size":935,"mtime":1612839695666,"results":"35","hashOfConfig":"30"},{"size":2840,"mtime":1613444088171,"results":"36","hashOfConfig":"30"},{"size":548,"mtime":1613619962420,"results":"37","hashOfConfig":"30"},{"size":3824,"mtime":1613702901539,"results":"38","hashOfConfig":"30"},{"size":3012,"mtime":1612753824636,"results":"39","hashOfConfig":"30"},{"size":219,"mtime":1612251473967,"results":"40","hashOfConfig":"30"},{"size":767,"mtime":1612852983774,"results":"41","hashOfConfig":"30"},{"size":1544,"mtime":1612852943182,"results":"42","hashOfConfig":"30"},{"size":2763,"mtime":1613618009730,"results":"43","hashOfConfig":"30"},{"size":928,"mtime":1613703088206,"results":"44","hashOfConfig":"30"},{"size":1295,"mtime":1613112274302,"results":"45","hashOfConfig":"30"},{"size":155,"mtime":1612428285224,"results":"46","hashOfConfig":"30"},{"size":2590,"mtime":1613113233403,"results":"47","hashOfConfig":"30"},{"size":3588,"mtime":1613703199476,"results":"48","hashOfConfig":"30"},{"size":181,"mtime":1612407921765,"results":"49","hashOfConfig":"30"},{"size":238,"mtime":1612255527598,"results":"50","hashOfConfig":"30"},{"size":537,"mtime":1613618842495,"results":"51","hashOfConfig":"30"},{"size":745,"mtime":1612839710584,"results":"52","hashOfConfig":"30"},{"size":1057,"mtime":1612839677418,"results":"53","hashOfConfig":"30"},{"size":4937,"mtime":1613703862878,"results":"54","hashOfConfig":"30"},{"size":3473,"mtime":1613712957875,"results":"55","hashOfConfig":"30"},{"size":1129,"mtime":1612852057336,"results":"56","hashOfConfig":"30"},{"size":1434,"mtime":1613116858276,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"jdnw0u",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\index.tsx",[],["122","123"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\accountAuthStore.ts",["124"],"import { action, observable } from \"mobx\";\r\n\r\nimport accountAuthService from \"../services/accountAuth/accountAuthService\";\r\nimport ILoginInput from \"../services/accountAuth/dto/loginInput\";\r\nimport ILoginOutput from \"../services/accountAuth/dto/loginOutput\";\r\nimport utils from \"../utils/utils\";\r\n\r\nclass AccountAuthStore {\r\n  @action\r\n  async login(model: ILoginInput): Promise<ILoginOutput> {\r\n    const res = await accountAuthService.login({\r\n      identifier: model.identifier,\r\n      password: model.password,\r\n    });\r\n    utils.setCookie(\"access_token\", res.jwt);\r\n    utils.setCookie(\"id\", res.user?.id);\r\n    return res;\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    if (!utils.getCookie(\"access_token\")) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  @action\r\n  async logout() {\r\n    await utils.removeToken();\r\n  }\r\n}\r\n\r\nexport default AccountAuthStore;\r\n","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\user\\userService.ts",["125"],"import IUserOutput from \"./dto/userOutput\";\r\nimport http from \"../httpService\";\r\nimport AppConsts from \"../../utils/appconst\";\r\n\r\nclass UserService {\r\n  public async getCurrentLoginUser(id: number): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users/${id}`);\r\n\r\n    return res.data;\r\n  }\r\n  public async getUserProfile(id: number): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users/${id}`);\r\n\r\n    return res.data;\r\n  }\r\n  public async getAllUsers(): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users`);\r\n\r\n    return res.data;\r\n  }\r\n  public async updateUser(id: number, payload: any): Promise<any> {\r\n    // const {} = payload;\r\n    const res = await http.put(`${AppConsts.appBaseUrl}/users/${id}`, {\r\n      ...payload,\r\n    });\r\n    return res.data;\r\n  }\r\n  public async uploadImage(formData: any): Promise<any> {\r\n    // const {} = payload;\r\n    console.log(\"userService\", ...formData);\r\n\r\n    const res = await http.post(\r\n      `${AppConsts.appBaseUrl}/users`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n",["126","127"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\record\\recordService.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\appconst.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\ProtectedRoute.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\AppLayout.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Logout\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Employee\\index.tsx",["128","129"],"import \"./index.less\";\r\nimport * as React from \"react\";\r\nimport { Avatar, Col, List, Row, Input, Button } from \"antd\";\r\nimport Stores from \"../../stores/storeIdentifier\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport AppConsts from \"../../utils/appconst\";\r\nimport RecordDtrTable from \"../../components/RecordDtrTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RecordStore from \"../../stores/recordStore\";\r\nimport UserStore from \"../../stores/userStore\";\r\n\r\nconst { Search } = Input;\r\n\r\ninterface IPropsEmployee {\r\n  recordStore: RecordStore\r\n  userStore: UserStore\r\n}\r\n\r\n@inject(Stores.RecordStore, Stores.UserStore)\r\n@observer\r\nclass Admin extends React.Component<IPropsEmployee> {\r\n  state = {\r\n    personData: [],\r\n    peopleData: [],\r\n  };\r\n  async componentDidMount() {\r\n    const allusers = await this.props.userStore.getAllUsers();\r\n    this.setState({\r\n      ...this.state,\r\n      peopleData: allusers,\r\n    });\r\n  }\r\n  handleOnlick = async (id: any, e: any) => {\r\n    const res = await this.props.recordStore.getRecord(id);\r\n    this.setState({\r\n      personData: res,\r\n    });\r\n  };\r\n  handleOnchange = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      peopleData: this.props.userStore.allUsers,\r\n    });\r\n  };\r\n  handleClickProfile = async (id: any) => {\r\n    const user = await this.props.userStore.getUserProfile(parseInt(id));\r\n    <Link to={`profile/${id}`}></Link>;\r\n  };\r\n  handleOnSearch = async (value: any) => {\r\n    this.props.userStore.allUsers.find((item: any) => {\r\n      if (item.username.toLowerCase() === value.toLowerCase()) {\r\n        this.setState({\r\n          peopleData: item ? [item] : this.props.userStore.allUsers,\r\n        });\r\n      } else if (\r\n        item.lastname &&\r\n        item.lastname.toLowerCase() === value.toLowerCase()\r\n      ) {\r\n        this.setState({\r\n          peopleData: item ? [item] : this.props.userStore.allUsers,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { personData, peopleData } = this.state;\r\n    return (\r\n      <Row>\r\n        <Col span={5} className=\"col-1-time-in\">\r\n          <Search\r\n            placeholder=\"Search employee\"\r\n            allowClear\r\n            enterButton\r\n            size=\"large\"\r\n            onSearch={this.handleOnSearch}\r\n            onChange={this.handleOnchange}\r\n            style={{ width: 300, marginBottom: \"25px\" }}\r\n          />\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            size=\"default\"\r\n            pagination={{\r\n              onChange: (page) => {},\r\n              pageSize: 7,\r\n            }}\r\n            dataSource={peopleData}\r\n            renderItem={(item: any) => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <Link to={`profile/${item.id}`}>\r\n                      <Avatar src={item.avatar ? AppConsts.appBaseUrl + item.avatar!.url : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"} />\r\n                    </Link>\r\n                  }\r\n                  title={\r\n                    <span>\r\n                      <Button\r\n                        data-value={item.id}\r\n                        href={item.href}\r\n                        onClick={this.handleOnlick.bind(this, item.id)}\r\n                        size=\"small\"\r\n                      >\r\n                        {item.firstname} {item.lastname}\r\n                      </Button>\r\n                    </span>\r\n                  }\r\n                />\r\n                {item.content}\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n        <Col span={3} />\r\n        <Col span={14} className=\"col-1-time-in\">\r\n          <RecordDtrTable data={personData.sort().reverse()} dataSize={10} />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Exception\\index.tsx",[],["130","131"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Loading\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\dtr.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\RecordDtrTable\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Login\\index.tsx",["132"],"import * as React from 'react';\r\nimport './index.less';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport logo from '../../assets/images/hyperstacks-logo-orange.svg';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport Stores from '../../stores/storeIdentifier';\r\nimport AccountAuthStore from '../../stores/accountAuthStore';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface ILoginUserStore{\r\n  accountAuthStore: AccountAuthStore;\r\n  location?: any;\r\n}\r\n\r\n@inject(Stores.AccountAuthStore)\r\n@observer\r\nclass Login extends React.Component<ILoginUserStore> {\r\n  state = {\r\n    from: { from: { pathname: '/dashboard' } }\r\n  }\r\n  handleSubmit = async (values:any) => {\r\n    await this.props.accountAuthStore.login({identifier: values.username, password:values.password});\r\n    const { state } = await this.props.location;\r\n    \r\n    window.location.href = await state ? await state.from.pathname : '/';\r\n  };\r\n  \r\n  public render() {\r\n    let { from } = this.props.location.state || { from: { pathname: '/' } };\r\n    \r\n    if (this.props.accountAuthStore!.isAuthenticated ) return <Redirect to={from} />;\r\n    \r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={this.handleSubmit}\r\n      >\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"Hyperstacks Logo\"/>\r\n        </div>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Username or Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username/Email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Password!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n  \r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n  \r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  \r\n  }\r\n}\r\nexport default Login;","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\utils.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\userStore.ts",["133"],"import { action, observable } from 'mobx';\r\nimport CurrentUserLogin from '../services/accountAuth/dto/currentUserLogin';\r\nimport IUserOutput from '../services/user/dto/userOutput';\r\n// import ILoginOutput from '../services/accountAuth/dto/loginOutput';\r\nimport userService from '../services/user/userService';\r\n\r\nclass UserStore {\r\n  @observable currentLogin:any = new CurrentUserLogin();\r\n  @observable allUsers:[] = [];\r\n  @observable userProfile:[] = [];\r\n\r\n  @action\r\n  async getCurrentLoginUser(id: number) {\r\n    let result = await userService.getCurrentLoginUser(id);\r\n    this.currentLogin = result;\r\n    return result;\r\n  }\r\n  @action\r\n  async getUserProfile(id: number) {\r\n    let result = await userService.getUserProfile(id);\r\n    this.userProfile = result;\r\n    return result;\r\n  }\r\n\r\n  @action\r\n  async getAllUsers() {\r\n    let result = await userService.getAllUsers();\r\n    this.allUsers = result;\r\n    return result;\r\n  }\r\n\r\n  @action\r\n  async updateUser(id:number, payload:any){\r\n    let result = await userService.updateUser(id, payload);\r\n    return result;\r\n  }\r\n  @action\r\n  async uploadImage(formData: any){\r\n    console.log('uploadImage', ...formData);\r\n    \r\n    let result = await userService.uploadImage(formData);\r\n    return result;\r\n  }\r\n}\r\nexport default UserStore;","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\dto\\currentUserLogin.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\router.config.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\index.tsx",["134","135"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeIdentifier.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Footer\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\NotFoundRoute.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\accountAuthService.ts",["136"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\UserLayout.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\index.tsx",["137","138","139","140","141","142","143","144","145","146","147"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\components\\updateFields.tsx",["148","149","150","151","152","153","154","155","156","157","158","159","160"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Performance\\index.tsx",["161","162","163","164","165","166"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\SiderMenu\\index.tsx",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":18,"nodeType":"174","messageId":"175","endLine":1,"endColumn":28},{"ruleId":"172","severity":1,"message":"176","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":19},{"ruleId":"168","replacedBy":"177"},{"ruleId":"170","replacedBy":"178"},{"ruleId":"172","severity":1,"message":"179","line":46,"column":11,"nodeType":"174","messageId":"175","endLine":46,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":50,"column":52,"nodeType":"182","messageId":"183","endLine":50,"endColumn":54},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":79,"column":11,"nodeType":"188","endLine":79,"endColumn":52},{"ruleId":"172","severity":1,"message":"176","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"189","line":46,"column":11,"nodeType":"174","messageId":"175","endLine":46,"endColumn":21},{"ruleId":"180","severity":1,"message":"190","line":56,"column":56,"nodeType":"182","messageId":"183","endLine":56,"endColumn":58},{"ruleId":"172","severity":1,"message":"191","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":13},{"ruleId":"172","severity":1,"message":"192","line":3,"column":28,"nodeType":"174","messageId":"175","endLine":3,"endColumn":33},{"ruleId":"172","severity":1,"message":"193","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":21},{"ruleId":"172","severity":1,"message":"194","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":19},{"ruleId":"172","severity":1,"message":"195","line":13,"column":3,"nodeType":"174","messageId":"175","endLine":13,"endColumn":15},{"ruleId":"172","severity":1,"message":"196","line":14,"column":3,"nodeType":"174","messageId":"175","endLine":14,"endColumn":15},{"ruleId":"172","severity":1,"message":"197","line":15,"column":3,"nodeType":"174","messageId":"175","endLine":15,"endColumn":16},{"ruleId":"172","severity":1,"message":"198","line":18,"column":8,"nodeType":"174","messageId":"175","endLine":18,"endColumn":14},{"ruleId":"172","severity":1,"message":"199","line":67,"column":11,"nodeType":"174","messageId":"175","endLine":67,"endColumn":15},{"ruleId":"172","severity":1,"message":"200","line":83,"column":13,"nodeType":"174","messageId":"175","endLine":83,"endColumn":21},{"ruleId":"172","severity":1,"message":"201","line":83,"column":23,"nodeType":"174","messageId":"175","endLine":83,"endColumn":31},{"ruleId":"172","severity":1,"message":"202","line":83,"column":33,"nodeType":"174","messageId":"175","endLine":83,"endColumn":44},{"ruleId":"172","severity":1,"message":"192","line":5,"column":3,"nodeType":"174","messageId":"175","endLine":5,"endColumn":8},{"ruleId":"172","severity":1,"message":"203","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":9},{"ruleId":"172","severity":1,"message":"204","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":11},{"ruleId":"172","severity":1,"message":"205","line":8,"column":3,"nodeType":"174","messageId":"175","endLine":8,"endColumn":13},{"ruleId":"172","severity":1,"message":"206","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":6},{"ruleId":"172","severity":1,"message":"207","line":13,"column":8,"nodeType":"174","messageId":"175","endLine":13,"endColumn":14},{"ruleId":"172","severity":1,"message":"208","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":17},{"ruleId":"172","severity":1,"message":"209","line":21,"column":8,"nodeType":"174","messageId":"175","endLine":21,"endColumn":16},{"ruleId":"172","severity":1,"message":"198","line":22,"column":8,"nodeType":"174","messageId":"175","endLine":22,"endColumn":14},{"ruleId":"172","severity":1,"message":"210","line":24,"column":9,"nodeType":"174","messageId":"175","endLine":24,"endColumn":13},{"ruleId":"172","severity":1,"message":"211","line":27,"column":9,"nodeType":"174","messageId":"175","endLine":27,"endColumn":23},{"ruleId":"172","severity":1,"message":"212","line":30,"column":9,"nodeType":"174","messageId":"175","endLine":30,"endColumn":17},{"ruleId":"172","severity":1,"message":"213","line":36,"column":9,"nodeType":"174","messageId":"175","endLine":36,"endColumn":19},{"ruleId":"172","severity":1,"message":"207","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":16},{"ruleId":"172","severity":1,"message":"214","line":3,"column":23,"nodeType":"174","messageId":"175","endLine":3,"endColumn":27},{"ruleId":"172","severity":1,"message":"192","line":3,"column":34,"nodeType":"174","messageId":"175","endLine":3,"endColumn":39},{"ruleId":"172","severity":1,"message":"203","line":3,"column":41,"nodeType":"174","messageId":"175","endLine":3,"endColumn":47},{"ruleId":"172","severity":1,"message":"208","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":17},{"ruleId":"172","severity":1,"message":"215","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":22},{"ruleId":"172","severity":1,"message":"216","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":12},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"@typescript-eslint/no-unused-vars","'observable' is defined but never used.","Identifier","unusedVar","'IUserOutput' is defined but never used.",["217"],["218"],"'user' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["217"],["218"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'recordData' is assigned a value but never used.","Array.prototype.every() expects a return value from arrow function.","'utils' is defined but never used.","'Input' is defined but never used.","'ImageUploader' is defined but never used.","'CalendarOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'moment' is defined but never used.","'name' is assigned a value but never used.","'emailRef' is assigned a value but never used.","'phoneRef' is assigned a value but never used.","'birthdayRef' is assigned a value but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'DatePicker' is defined but never used.","'Col' is defined but never used.","'Avatar' is defined but never used.","'AppConsts' is defined but never used.","'TextArea' is defined but never used.","'Text' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'List' is defined but never used.","'RecordDtrTable' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]