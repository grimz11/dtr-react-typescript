[{"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\index.tsx":"1","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\accountAuthStore.ts":"2","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\user\\userService.ts":"3","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\record\\recordService.ts":"4","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\appconst.ts":"5","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\ProtectedRoute.tsx":"6","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\AppLayout.tsx":"7","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Logout\\index.tsx":"8","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Employee\\index.tsx":"9","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Exception\\index.tsx":"10","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Loading\\index.tsx":"11","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\dtr.tsx":"12","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\RecordDtrTable\\index.tsx":"13","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Login\\index.tsx":"14","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\utils.ts":"15","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\userStore.ts":"16","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\dto\\currentUserLogin.ts":"17","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\router.config.ts":"18","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\index.tsx":"19","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeIdentifier.ts":"20","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Footer\\index.tsx":"21","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\NotFoundRoute.tsx":"22","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\accountAuthService.ts":"23","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\UserLayout.tsx":"24","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\index.tsx":"25","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\components\\updateFields.tsx":"26","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Performance\\index.tsx":"27","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\SiderMenu\\index.tsx":"28","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Header\\index.tsx":"29","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\recordStore.ts":"30","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\httpService.ts":"31","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\activityFeed.tsx":"32","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeInitializer.ts":"33","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\index.tsx":"34"},{"size":444,"mtime":1613618888296,"results":"35","hashOfConfig":"36"},{"size":865,"mtime":1613703099732,"results":"37","hashOfConfig":"36"},{"size":1243,"mtime":1613451926109,"results":"38","hashOfConfig":"36"},{"size":904,"mtime":1613452671407,"results":"39","hashOfConfig":"36"},{"size":249,"mtime":1612333606641,"results":"40","hashOfConfig":"36"},{"size":935,"mtime":1612839695666,"results":"41","hashOfConfig":"36"},{"size":2840,"mtime":1613444088171,"results":"42","hashOfConfig":"36"},{"size":548,"mtime":1613619962420,"results":"43","hashOfConfig":"36"},{"size":3801,"mtime":1613721850085,"results":"44","hashOfConfig":"36"},{"size":3012,"mtime":1612753824636,"results":"45","hashOfConfig":"36"},{"size":219,"mtime":1612251473967,"results":"46","hashOfConfig":"36"},{"size":767,"mtime":1612852983774,"results":"47","hashOfConfig":"36"},{"size":1544,"mtime":1612852943182,"results":"48","hashOfConfig":"36"},{"size":2763,"mtime":1613618009730,"results":"49","hashOfConfig":"36"},{"size":928,"mtime":1613703088206,"results":"50","hashOfConfig":"36"},{"size":1295,"mtime":1613112274302,"results":"51","hashOfConfig":"36"},{"size":155,"mtime":1612428285224,"results":"52","hashOfConfig":"36"},{"size":2590,"mtime":1613113233403,"results":"53","hashOfConfig":"36"},{"size":3588,"mtime":1613703199476,"results":"54","hashOfConfig":"36"},{"size":181,"mtime":1612407921765,"results":"55","hashOfConfig":"36"},{"size":238,"mtime":1612255527598,"results":"56","hashOfConfig":"36"},{"size":537,"mtime":1613618842495,"results":"57","hashOfConfig":"36"},{"size":745,"mtime":1612839710584,"results":"58","hashOfConfig":"36"},{"size":1057,"mtime":1612839677418,"results":"59","hashOfConfig":"36"},{"size":4914,"mtime":1613721802916,"results":"60","hashOfConfig":"36"},{"size":3473,"mtime":1613712957875,"results":"61","hashOfConfig":"36"},{"size":1129,"mtime":1612852057336,"results":"62","hashOfConfig":"36"},{"size":1434,"mtime":1613116858276,"results":"63","hashOfConfig":"36"},{"size":1979,"mtime":1613721821356,"results":"64","hashOfConfig":"36"},{"size":1230,"mtime":1613452649813,"results":"65","hashOfConfig":"36"},{"size":1882,"mtime":1612839707554,"results":"66","hashOfConfig":"36"},{"size":1711,"mtime":1613722373411,"results":"67","hashOfConfig":"36"},{"size":320,"mtime":1612407899986,"results":"68","hashOfConfig":"36"},{"size":623,"mtime":1613113216540,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"jdnw0u",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\index.tsx",[],["153","154"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\accountAuthStore.ts",["155"],"import { action, observable } from \"mobx\";\r\n\r\nimport accountAuthService from \"../services/accountAuth/accountAuthService\";\r\nimport ILoginInput from \"../services/accountAuth/dto/loginInput\";\r\nimport ILoginOutput from \"../services/accountAuth/dto/loginOutput\";\r\nimport utils from \"../utils/utils\";\r\n\r\nclass AccountAuthStore {\r\n  @action\r\n  async login(model: ILoginInput): Promise<ILoginOutput> {\r\n    const res = await accountAuthService.login({\r\n      identifier: model.identifier,\r\n      password: model.password,\r\n    });\r\n    utils.setCookie(\"access_token\", res.jwt);\r\n    utils.setCookie(\"id\", res.user?.id);\r\n    return res;\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    if (!utils.getCookie(\"access_token\")) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  @action\r\n  async logout() {\r\n    await utils.removeToken();\r\n  }\r\n}\r\n\r\nexport default AccountAuthStore;\r\n",["156","157"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\user\\userService.ts",["158"],"import IUserOutput from \"./dto/userOutput\";\r\nimport http from \"../httpService\";\r\nimport AppConsts from \"../../utils/appconst\";\r\n\r\nclass UserService {\r\n  public async getCurrentLoginUser(id: number): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users/${id}`);\r\n\r\n    return res.data;\r\n  }\r\n  public async getUserProfile(id: number): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users/${id}`);\r\n\r\n    return res.data;\r\n  }\r\n  public async getAllUsers(): Promise<any> {\r\n    const res = await http.get(`${AppConsts.appBaseUrl}/users`);\r\n\r\n    return res.data;\r\n  }\r\n  public async updateUser(id: number, payload: any): Promise<any> {\r\n    // const {} = payload;\r\n    const res = await http.put(`${AppConsts.appBaseUrl}/users/${id}`, {\r\n      ...payload,\r\n    });\r\n    return res.data;\r\n  }\r\n  public async uploadImage(formData: any): Promise<any> {\r\n    // const {} = payload;\r\n    console.log(\"userService\", ...formData);\r\n\r\n    const res = await http.post(\r\n      `${AppConsts.appBaseUrl}/users`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    return res.data;\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n",["159","160"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\record\\recordService.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\appconst.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\ProtectedRoute.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\AppLayout.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Logout\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Employee\\index.tsx",["161","162","163"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Exception\\index.tsx",[],["164","165"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Loading\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\dtr.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\RecordDtrTable\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Login\\index.tsx",["166"],"import * as React from 'react';\r\nimport './index.less';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport logo from '../../assets/images/hyperstacks-logo-orange.svg';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport Stores from '../../stores/storeIdentifier';\r\nimport AccountAuthStore from '../../stores/accountAuthStore';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface ILoginUserStore{\r\n  accountAuthStore: AccountAuthStore;\r\n  location?: any;\r\n}\r\n\r\n@inject(Stores.AccountAuthStore)\r\n@observer\r\nclass Login extends React.Component<ILoginUserStore> {\r\n  state = {\r\n    from: { from: { pathname: '/dashboard' } }\r\n  }\r\n  handleSubmit = async (values:any) => {\r\n    await this.props.accountAuthStore.login({identifier: values.username, password:values.password});\r\n    const { state } = await this.props.location;\r\n    \r\n    window.location.href = await state ? await state.from.pathname : '/';\r\n  };\r\n  \r\n  public render() {\r\n    let { from } = this.props.location.state || { from: { pathname: '/' } };\r\n    \r\n    if (this.props.accountAuthStore!.isAuthenticated ) return <Redirect to={from} />;\r\n    \r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={this.handleSubmit}\r\n      >\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"Hyperstacks Logo\"/>\r\n        </div>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Username or Email!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username/Email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Password!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n  \r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n  \r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  \r\n  }\r\n}\r\nexport default Login;","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\utils\\utils.ts",[],["167","168"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\userStore.ts",["169"],"import { action, observable } from 'mobx';\r\nimport CurrentUserLogin from '../services/accountAuth/dto/currentUserLogin';\r\nimport IUserOutput from '../services/user/dto/userOutput';\r\n// import ILoginOutput from '../services/accountAuth/dto/loginOutput';\r\nimport userService from '../services/user/userService';\r\n\r\nclass UserStore {\r\n  @observable currentLogin:any = new CurrentUserLogin();\r\n  @observable allUsers:[] = [];\r\n  @observable userProfile:[] = [];\r\n\r\n  @action\r\n  async getCurrentLoginUser(id: number) {\r\n    let result = await userService.getCurrentLoginUser(id);\r\n    this.currentLogin = result;\r\n    return result;\r\n  }\r\n  @action\r\n  async getUserProfile(id: number) {\r\n    let result = await userService.getUserProfile(id);\r\n    this.userProfile = result;\r\n    return result;\r\n  }\r\n\r\n  @action\r\n  async getAllUsers() {\r\n    let result = await userService.getAllUsers();\r\n    this.allUsers = result;\r\n    return result;\r\n  }\r\n\r\n  @action\r\n  async updateUser(id:number, payload:any){\r\n    let result = await userService.updateUser(id, payload);\r\n    return result;\r\n  }\r\n  @action\r\n  async uploadImage(formData: any){\r\n    console.log('uploadImage', ...formData);\r\n    \r\n    let result = await userService.uploadImage(formData);\r\n    return result;\r\n  }\r\n}\r\nexport default UserStore;","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\dto\\currentUserLogin.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\router.config.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\index.tsx",["170","171"],"import \"./index.less\";\r\nimport * as React from \"react\";\r\nimport { Col,Row } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Stores from \"../../stores/storeIdentifier\";\r\nimport utils from \"../../utils/utils\";\r\nimport IRecordInput from \"../../services/record/dto/recordInput\";\r\nimport ActivityFeed from \"./components/activityFeed\";\r\nimport DTR from \"./components/dtr\";\r\n\r\n@inject(Stores.RecordStore, Stores.UserStore)\r\n@observer\r\nclass Dashboard extends React.Component<any> {\r\n  state = {\r\n    collapsed: false,\r\n    time: new Date(),\r\n    personRecord: [],\r\n    peopleRecords: [],\r\n    id: utils.getCookie(\"id\"),\r\n    timeBtn: false,\r\n    recordId: 0,\r\n    timeInRecord: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    await this.getCurrentLoginUser();\r\n    await this.getRecord();\r\n    await this.getAllRecords();\r\n    await this.checkWorkingStatus();\r\n  }\r\n  async getCurrentLoginUser() {\r\n    await this.props.userStore.getCurrentLoginUser(parseInt(await this.state!.id));\r\n  }\r\n  async getRecord() {\r\n    const userId = this.props.userStore!.currentLogin!.id;\r\n    await this.props.recordStore.getRecord(userId);\r\n    this.setState({\r\n      ...this.state,\r\n      personRecord: this.props.recordStore.personRecords.sort().reverse(),\r\n      id: utils.getCookie(\"id\"),\r\n    });\r\n  }\r\n  async getAllRecords() {\r\n    const recordData = await this.props.recordStore.getAllRecords();\r\n    this.setState({\r\n      ...this.state,\r\n      peopleRecords: this.props.recordStore.peopleRecords\r\n        .sort()\r\n        .reverse()\r\n        .slice(0, 8),\r\n    });\r\n  }\r\n  async checkWorkingStatus() {\r\n    this.state.personRecord.every((item: IRecordInput) => {\r\n      const date = item.created_at;\r\n      this.setState({\r\n        ...this.state,\r\n        timeBtn: item.currentlyWorking ? true : false,\r\n        recordId: item.id,\r\n        timeInRecord: date,\r\n      });\r\n    });\r\n  }\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  async calculateTimeElapse(date: string) {\r\n    let startTime: any, endTime: any;\r\n    startTime = new Date(date);\r\n    endTime = new Date();\r\n    let timeDiff = endTime - startTime;\r\n    timeDiff /= 1000;\r\n    let seconds = Math.round(timeDiff);\r\n    const hours = moment\r\n      .utc(moment.duration(seconds, \"seconds\").asMilliseconds())\r\n      .format(\"HH:mm:ss\");\r\n\r\n    return hours;\r\n  }\r\n\r\n  public handleOnClick = async () => {\r\n    await this.checkWorkingStatus();\r\n    const recordTime = await this.calculateTimeElapse(this.state.timeInRecord);\r\n    if (this.state.timeBtn) {\r\n      const payloadOut: IRecordInput = {\r\n        currentlyWorking: false,\r\n        userId: this.props.userStore!.currentLogin,\r\n        timeOut: new Date().getTime(),\r\n        hoursRendered: recordTime,\r\n      };\r\n      await this.props.recordStore.timeOut(this.state.recordId, payloadOut);\r\n    } else {\r\n      const payloadIn: IRecordInput = {\r\n        currentlyWorking: true,\r\n        userId: this.props.userStore!.currentLogin,\r\n        hoursRendered: \"00.00:00\",\r\n      };\r\n      await this.props.recordStore.timeIn(payloadIn);\r\n    }\r\n    await this.getRecord();\r\n    await this.getAllRecords();\r\n\r\n    this.setState({ ...this.state, timeBtn: !this.state.timeBtn });\r\n  };\r\n\r\n  render() {\r\n    const { peopleRecords } = this.state;\r\n    return (\r\n      <Row>\r\n        <DTR data={this.state} handleOnClick={this.handleOnClick} />\r\n        <Col span={2} />\r\n        <ActivityFeed peopleRecords={peopleRecords} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeIdentifier.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Footer\\index.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\NotFoundRoute.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\accountAuth\\accountAuthService.ts",["172"],"import http from '../httpService';\r\nimport ILoginInput from './dto/loginInput';\r\nimport ILoginOutput from './dto/loginOutput';\r\nimport { IRegisterInput } from './dto/registerInput';\r\nimport { IRegisterOutput } from './dto/registerOutput';\r\nimport utils from '../../utils/utils';\r\n\r\nclass AccountAuthService {\r\n  public async register(registerInput: IRegisterInput): Promise<IRegisterOutput> {\r\n    let res = await http.post('auth/local/register', registerInput);\r\n    return res.data.result;\r\n  }\r\n\r\n  public async login(loginInput: ILoginInput): Promise<ILoginOutput> {\r\n    let res = await http.post('auth/local', loginInput);\r\n    // utils.setCookie('id',res.data.id);\r\n    return res.data;\r\n  }\r\n}\r\n\r\nexport default new AccountAuthService();","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Layout\\UserLayout.tsx",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\index.tsx",["173","174","175","176","177","178","179","180","181","182","183","184"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Profile\\components\\updateFields.tsx",["185","186","187","188","189","190","191","192","193","194","195","196","197"],"import \"./updateFields.less\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n} from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport AppConsts from \"../../../utils/appconst\";\r\nimport {\r\n  CalendarOutlined,\r\n  HomeOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport moment from \"moment\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst UpdateFields = ({ props, handleUpdateUser }: any) => {\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onFinish = () => {};\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const config = {\r\n    rules: [\r\n      {\r\n        type: \"object\" as const,\r\n        required: true,\r\n        message: \"Please select time!\",\r\n      },\r\n    ],\r\n  };\r\n  console.log(\"props\", props);\r\n\r\n  return (\r\n    <Row className=\"user-form\">\r\n      {/* <Col span={12}> */}\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={handleUpdateUser}\r\n        // onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item name=\"name\" className=\"profile-name\" label={<MailOutlined style={{ width: \"30px\" }} />}>\r\n          <span>\r\n            {props.user.firstname &&\r\n              props.user.firstname +\r\n                \" \" +\r\n                (props.user ? props.user.lastname : \"\")}\r\n          </span>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"quotes\" className=\"profile-quotes\"\r\n        label={<MailOutlined style={{ width: \"30px\" }} />}>\r\n          {/* <Input placeholder={props.user.quotes}/> */}\r\n          \r\n          <span>{props.user.quotes && `${\"“\" + props.user.quotes + \"”\"}`}</span>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<MailOutlined style={{ width: \"30px\" }} />}\r\n          name=\"email\"\r\n        >\r\n          <span>{props.user.email && props.user.email}</span>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"phoneNumber\"\r\n          label={<PhoneOutlined style={{ width: \"30px\" }} />}\r\n        >\r\n          {/* <Input\r\n            placeholder={props.user && props.user.phoneNumber}\r\n            ref={props.addresRef}\r\n          /> */}\r\n          <span>{props.user.phoneNumber && props.user.phoneNumber}</span>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"birthday\"\r\n          label={<CalendarOutlined style={{ width: \"30px\" }} {...config} />}\r\n        >\r\n          {/* <DatePicker\r\n            defaultValue={\r\n              props.user.birthday\r\n                ? moment(props.user.birthday, \"MM-DD-YYYY\")\r\n                : moment(\"2019-06-07\")\r\n            }\r\n            format={\"MM-DD-YYYY\"}\r\n          /> */}\r\n          <span>{props.user.birthday && props.user.birthday}</span>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"address\"\r\n          label={<HomeOutlined style={{ width: \"30px\" }} />}\r\n        >\r\n          {/* <Input placeholder={props.user.address && props.user.address} /> */}\r\n          <span>{props.user.address && props.user.address}</span>\r\n        </Form.Item>\r\n      </Form>\r\n      {/* </Col> */}\r\n      {/* <Col span={12}>\r\n        <span>\r\n          <Text type=\"secondary\">{props.user.quotes}</Text>\r\n        </span>\r\n      </Col> */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UpdateFields;\r\n","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Performance\\index.tsx",["198","199","200","201","202","203"],"import \"./index.less\";\r\nimport * as React from \"react\";\r\nimport { Avatar, Col, List, Row, Input, Button, Result, Progress } from \"antd\";\r\nimport Stores from \"../../stores/storeIdentifier\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport AppConsts from \"../../utils/appconst\";\r\nimport RecordDtrTable from \"../../components/RecordDtrTable\";\r\n\r\n@inject(Stores.RecordStore, Stores.UserStore)\r\n@observer\r\nclass Profile extends React.Component<any> {\r\n  async componentDidMount() {}\r\n\r\n  handleOnchange = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      peopleData: this.props.userStore.allUsers,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col style={{margin: \"auto\"}}>\r\n          <Result\r\n            status=\"403\"\r\n            title=\"Coming Soon.....\"\r\n            subTitle=\"Sorry, work is still in progress.\"\r\n            extra={\r\n              <Progress\r\n                type=\"circle\"\r\n                percent={75}\r\n                format={(percent) => `${percent} %`}\r\n              />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n",["204","205"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\SiderMenu\\index.tsx",["206"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Header\\index.tsx",["207"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\recordStore.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\services\\httpService.ts",["208","209","210","211"],"import AppConsts from '../utils/appconst';\r\nimport { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport utils from '../utils/utils';\r\n\r\nconst qs = require('qs');\r\n\r\nconst http = axios.create({\r\n  baseURL: AppConsts.appBaseUrl,\r\n  timeout: 30000,\r\n  paramsSerializer: function (params) {\r\n    return qs.stringify(params, {\r\n      encode: false,\r\n    });\r\n  },\r\n});\r\n\r\n\r\n\r\nhttp.interceptors.request.use(\r\n  function (config) {\r\n    if(utils.getCookie('access_token')) {\r\n      config.headers.common['Authorization'] = 'Bearer ' + utils.getCookie('access_token');\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nhttp.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => { \r\n    if(error.response.status == 400){\r\n      Modal.error({\r\n        title: error.response.statusText, \r\n        content: error.response.data.message[0].messages[0].message,\r\n      });\r\n    }\r\n    else if (error.response.status == 500 && error.response.config.url == \"api/TokenAuth/Authenticate\") {\r\n      Modal.error({\r\n        title: error.response.data.error.message === 'Login failed' ? 'Uh-Oh' : error.response.data.error.message,\r\n        content:\r\n          error.response.data.error.message === 'Login failed!'\r\n            ? 'It seems that you have entered an incorrect user name, email, or password. Please try again.'\r\n            : error.response.data.error.details,\r\n      });\r\n    }else if (error.response.status == 500) { \r\n        alert('Your session has timed out. Please login again.');\r\n        window.location.href = '/user/login';\r\n    } else if (!error.response) {\r\n        if (axios.isCancel(error)) {\r\n        } else {\r\n          Modal.error({ content: 'UnknownError'});\r\n        }\r\n    }\r\n    setTimeout(() => {}, 1000);\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default http;\r\n","E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\scenes\\Dashboard\\components\\activityFeed.tsx",["212"],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\stores\\storeInitializer.ts",[],"E:\\Dev\\hyperstacksinc\\hyperstacksinc-dtr-frontend\\src\\components\\Router\\index.tsx",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":18,"nodeType":"219","messageId":"220","endLine":1,"endColumn":28},{"ruleId":"213","replacedBy":"221"},{"ruleId":"215","replacedBy":"222"},{"ruleId":"217","severity":1,"message":"223","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":19},{"ruleId":"213","replacedBy":"224"},{"ruleId":"215","replacedBy":"225"},{"ruleId":"217","severity":1,"message":"226","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},{"ruleId":"217","severity":1,"message":"227","line":46,"column":11,"nodeType":"219","messageId":"220","endLine":46,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":50,"column":52,"nodeType":"230","messageId":"231","endLine":50,"endColumn":54},{"ruleId":"213","replacedBy":"232"},{"ruleId":"215","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":79,"column":11,"nodeType":"236","endLine":79,"endColumn":52},{"ruleId":"213","replacedBy":"237"},{"ruleId":"215","replacedBy":"238"},{"ruleId":"217","severity":1,"message":"223","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":19},{"ruleId":"217","severity":1,"message":"239","line":46,"column":11,"nodeType":"219","messageId":"220","endLine":46,"endColumn":21},{"ruleId":"228","severity":1,"message":"240","line":56,"column":56,"nodeType":"230","messageId":"231","endLine":56,"endColumn":58},{"ruleId":"217","severity":1,"message":"241","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"242","line":3,"column":28,"nodeType":"219","messageId":"220","endLine":3,"endColumn":33},{"ruleId":"217","severity":1,"message":"226","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},{"ruleId":"217","severity":1,"message":"243","line":9,"column":8,"nodeType":"219","messageId":"220","endLine":9,"endColumn":21},{"ruleId":"217","severity":1,"message":"244","line":12,"column":3,"nodeType":"219","messageId":"220","endLine":12,"endColumn":19},{"ruleId":"217","severity":1,"message":"245","line":13,"column":3,"nodeType":"219","messageId":"220","endLine":13,"endColumn":15},{"ruleId":"217","severity":1,"message":"246","line":14,"column":3,"nodeType":"219","messageId":"220","endLine":14,"endColumn":15},{"ruleId":"217","severity":1,"message":"247","line":15,"column":3,"nodeType":"219","messageId":"220","endLine":15,"endColumn":16},{"ruleId":"217","severity":1,"message":"248","line":18,"column":8,"nodeType":"219","messageId":"220","endLine":18,"endColumn":14},{"ruleId":"217","severity":1,"message":"249","line":67,"column":11,"nodeType":"219","messageId":"220","endLine":67,"endColumn":15},{"ruleId":"217","severity":1,"message":"250","line":83,"column":13,"nodeType":"219","messageId":"220","endLine":83,"endColumn":21},{"ruleId":"217","severity":1,"message":"251","line":83,"column":23,"nodeType":"219","messageId":"220","endLine":83,"endColumn":31},{"ruleId":"217","severity":1,"message":"252","line":83,"column":33,"nodeType":"219","messageId":"220","endLine":83,"endColumn":44},{"ruleId":"217","severity":1,"message":"242","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":8},{"ruleId":"217","severity":1,"message":"253","line":6,"column":3,"nodeType":"219","messageId":"220","endLine":6,"endColumn":9},{"ruleId":"217","severity":1,"message":"254","line":7,"column":3,"nodeType":"219","messageId":"220","endLine":7,"endColumn":11},{"ruleId":"217","severity":1,"message":"255","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":13},{"ruleId":"217","severity":1,"message":"256","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":6},{"ruleId":"217","severity":1,"message":"257","line":13,"column":8,"nodeType":"219","messageId":"220","endLine":13,"endColumn":14},{"ruleId":"217","severity":1,"message":"226","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":17},{"ruleId":"217","severity":1,"message":"258","line":21,"column":8,"nodeType":"219","messageId":"220","endLine":21,"endColumn":16},{"ruleId":"217","severity":1,"message":"248","line":22,"column":8,"nodeType":"219","messageId":"220","endLine":22,"endColumn":14},{"ruleId":"217","severity":1,"message":"259","line":24,"column":9,"nodeType":"219","messageId":"220","endLine":24,"endColumn":13},{"ruleId":"217","severity":1,"message":"260","line":27,"column":9,"nodeType":"219","messageId":"220","endLine":27,"endColumn":23},{"ruleId":"217","severity":1,"message":"261","line":30,"column":9,"nodeType":"219","messageId":"220","endLine":30,"endColumn":17},{"ruleId":"217","severity":1,"message":"262","line":36,"column":9,"nodeType":"219","messageId":"220","endLine":36,"endColumn":19},{"ruleId":"217","severity":1,"message":"257","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":16},{"ruleId":"217","severity":1,"message":"263","line":3,"column":23,"nodeType":"219","messageId":"220","endLine":3,"endColumn":27},{"ruleId":"217","severity":1,"message":"242","line":3,"column":34,"nodeType":"219","messageId":"220","endLine":3,"endColumn":39},{"ruleId":"217","severity":1,"message":"253","line":3,"column":41,"nodeType":"219","messageId":"220","endLine":3,"endColumn":47},{"ruleId":"217","severity":1,"message":"226","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},{"ruleId":"217","severity":1,"message":"264","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":22},{"ruleId":"213","replacedBy":"265"},{"ruleId":"215","replacedBy":"266"},{"ruleId":"217","severity":1,"message":"267","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":12},{"ruleId":"217","severity":1,"message":"226","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":37,"column":30,"nodeType":"270","messageId":"271","endLine":37,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":43,"column":36,"nodeType":"270","messageId":"271","endLine":43,"endColumn":38},{"ruleId":"268","severity":1,"message":"269","line":43,"column":72,"nodeType":"270","messageId":"271","endLine":43,"endColumn":74},{"ruleId":"268","severity":1,"message":"269","line":51,"column":37,"nodeType":"270","messageId":"271","endLine":51,"endColumn":39},{"ruleId":"217","severity":1,"message":"226","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":17},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"@typescript-eslint/no-unused-vars","'observable' is defined but never used.","Identifier","unusedVar",["272"],["273"],"'IUserOutput' is defined but never used.",["272"],["273"],"'AppConsts' is defined but never used.","'user' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["272"],["273"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["272"],["273"],"'recordData' is assigned a value but never used.","Array.prototype.every() expects a return value from arrow function.","'utils' is defined but never used.","'Input' is defined but never used.","'ImageUploader' is defined but never used.","'CalendarOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'moment' is defined but never used.","'name' is assigned a value but never used.","'emailRef' is assigned a value but never used.","'phoneRef' is assigned a value but never used.","'birthdayRef' is assigned a value but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'DatePicker' is defined but never used.","'Col' is defined but never used.","'Avatar' is defined but never used.","'TextArea' is defined but never used.","'Text' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'List' is defined but never used.","'RecordDtrTable' is defined but never used.",["272"],["273"],"'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]